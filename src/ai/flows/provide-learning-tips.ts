// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview This file defines a Genkit flow for providing learning tips based on the chat's context.
 *
 * provideLearningTips - An async function that takes the chat history and returns learning tips.
 * ProvideLearningTipsInput - The input type for the provideLearningTips function, which is an array of messages representing the chat history.
 * ProvideLearningTipsOutput - The output type for the provideLearningTips function, which is a string representing the learning tips.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const ProvideLearningTipsInputSchema = z.object({
  chatHistory: z.string().describe('The chat history to provide learning tips for.'),
});
export type ProvideLearningTipsInput = z.infer<typeof ProvideLearningTipsInputSchema>;

const ProvideLearningTipsOutputSchema = z.object({
  learningTips: z.string().describe('The learning tips based on the chat history.'),
});
export type ProvideLearningTipsOutput = z.infer<typeof ProvideLearningTipsOutputSchema>;

export async function provideLearningTips(input: ProvideLearningTipsInput): Promise<ProvideLearningTipsOutput> {
  return provideLearningTipsFlow(input);
}

const provideLearningTipsPrompt = ai.definePrompt({
  name: 'provideLearningTipsPrompt',
  input: {
    schema: z.object({
      chatHistory: z.string().describe('The chat history to provide learning tips for.'),
    }),
  },
  output: {
    schema: z.object({
      learningTips: z.string().describe('The learning tips based on the chat history.'),
    }),
  },
  prompt: `You are an AI assistant designed to provide helpful and informative learning tips based on the chat history.

  Chat History: {{{chatHistory}}}

  Please generate learning tips based on the above chat history. Focus on providing actionable advice and resources to enhance understanding of the topics discussed.`, 
});

const provideLearningTipsFlow = ai.defineFlow<
  typeof ProvideLearningTipsInputSchema,
  typeof ProvideLearningTipsOutputSchema
>({
  name: 'provideLearningTipsFlow',
  inputSchema: ProvideLearningTipsInputSchema,
  outputSchema: ProvideLearningTipsOutputSchema,
},async input => {
  const {output} = await provideLearningTipsPrompt(input);
  return output!;
});
